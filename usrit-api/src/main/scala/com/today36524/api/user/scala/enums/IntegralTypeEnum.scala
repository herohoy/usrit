package com.today36524.api.user.scala.enums;

      class IntegralTypeEnum private(val id: Int, val name: String) extends com.github.dapeng.core.enums.TEnum(id,name) {}

      /**
       * Autogenerated by Dapeng-Code-Generator (1.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated

      * 

 积分流水类型

      **/
      object IntegralTypeEnum {

      
            val SHOW = new IntegralTypeEnum(0, "流水不变（预留，可用于查询）")
          
            val ADD = new IntegralTypeEnum(1, "增加流水")
          
            val MINUS = new IntegralTypeEnum(2, "减少流水")
          
      val UNDEFINED = new IntegralTypeEnum(-1,"UNDEFINED") // undefined enum
      

      def findByValue(v: Int): IntegralTypeEnum = {
        v match {
          case 0 => SHOW
            case 1 => ADD
            case 2 => MINUS
            
          case _ => new IntegralTypeEnum(v,"#"+ v)
        }
      }

      def apply(v: Int) = findByValue(v)
      def unapply(v: IntegralTypeEnum): Option[Int] = Some(v.id)

    }
    